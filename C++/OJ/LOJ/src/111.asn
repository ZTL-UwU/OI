	.file	"111_optimized.cpp"
	.text
	.section .rdata,"dr"
	.align 4
__ZL4MAXN:
	.long	1000010
	.globl	_old_rnk
	.bss
	.align 32
_old_rnk:
	.space 8000080
	.globl	_rnk
	.align 32
_rnk:
	.space 8000080
	.globl	_bsk
	.align 32
_bsk:
	.space 4000040
	.globl	_suf
	.align 32
_suf:
	.space 4000040
	.globl	_tmp
	.align 32
_tmp:
	.space 4000040
	.globl	_sot
	.align 32
_sot:
	.space 4000040
	.globl	_s
	.align 32
_s:
	.space 1000010
	.text
	.globl	__Z5checkiii
	.def	__Z5checkiii;	.scl	2;	.type	32;	.endef
__Z5checkiii:
LFB23:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	8(%ebp), %eax
	movl	_old_rnk(,%eax,4), %edx
	movl	12(%ebp), %eax
	movl	_old_rnk(,%eax,4), %eax
	cmpl	%eax, %edx
	jne	L2
	movl	8(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	_old_rnk(,%eax,4), %edx
	movl	12(%ebp), %ecx
	movl	16(%ebp), %eax
	addl	%ecx, %eax
	movl	_old_rnk(,%eax,4), %eax
	cmpl	%eax, %edx
	jne	L2
	movl	$1, %eax
	jmp	L3
L2:
	movl	$0, %eax
L3:
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE23:
	.def	___main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
LC0:
	.ascii "%s\0"
LC1:
	.ascii "%d%c\0"
	.text
	.globl	_main
	.def	_main;	.scl	2;	.type	32;	.endef
_main:
LFB24:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	andl	$-16, %esp
	subl	$32, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	call	___main
	movl	$_s, 4(%esp)
	movl	$LC0, (%esp)
	call	_scanf
	movl	$_s, (%esp)
	call	_strlen
	movl	%eax, 24(%esp)
	movl	$150, 28(%esp)
	movl	$1, %ebx
L7:
	cmpl	24(%esp), %ebx
	jg	L6
	leal	-1(%ebx), %eax
	movzbl	_s(%eax), %eax
	movsbl	%al, %eax
	movl	%eax, _rnk(,%ebx,4)
	movl	_rnk(,%ebx,4), %eax
	movl	_bsk(,%eax,4), %edx
	addl	$1, %edx
	movl	%edx, _bsk(,%eax,4)
	addl	$1, %ebx
	jmp	L7
L6:
	movl	$1, %ebx
L9:
	cmpl	28(%esp), %ebx
	jg	L8
	movl	_bsk(,%ebx,4), %edx
	leal	-1(%ebx), %eax
	movl	_bsk(,%eax,4), %eax
	addl	%edx, %eax
	movl	%eax, _bsk(,%ebx,4)
	addl	$1, %ebx
	jmp	L9
L8:
	movl	24(%esp), %ebx
L11:
	testl	%ebx, %ebx
	jle	L10
	movl	_rnk(,%ebx,4), %edx
	movl	_bsk(,%edx,4), %eax
	leal	-1(%eax), %ecx
	movl	%ecx, _bsk(,%edx,4)
	movl	%ebx, _suf(,%eax,4)
	subl	$1, %ebx
	jmp	L11
L10:
	movl	$1, %edi
L28:
	cmpl	24(%esp), %edi
	jge	L12
	movl	$0, %esi
	movl	24(%esp), %ebx
L14:
	movl	24(%esp), %eax
	subl	%edi, %eax
	cmpl	%eax, %ebx
	jle	L13
	addl	$1, %esi
	movl	%ebx, _tmp(,%esi,4)
	subl	$1, %ebx
	jmp	L14
L13:
	movl	$1, %ebx
L17:
	cmpl	24(%esp), %ebx
	jg	L15
	movl	_suf(,%ebx,4), %eax
	cmpl	%eax, %edi
	jge	L16
	movl	_suf(,%ebx,4), %eax
	addl	$1, %esi
	subl	%edi, %eax
	movl	%eax, _tmp(,%esi,4)
L16:
	addl	$1, %ebx
	jmp	L17
L15:
	movl	28(%esp), %eax
	addl	$5, %eax
	sall	$2, %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$_bsk, (%esp)
	call	_memset
	movl	$1, %ebx
L19:
	cmpl	24(%esp), %ebx
	jg	L18
	movl	_tmp(,%ebx,4), %eax
	movl	_rnk(,%eax,4), %eax
	movl	%eax, _sot(,%ebx,4)
	movl	_sot(,%ebx,4), %eax
	movl	_bsk(,%eax,4), %edx
	addl	$1, %edx
	movl	%edx, _bsk(,%eax,4)
	addl	$1, %ebx
	jmp	L19
L18:
	movl	$1, %ebx
L21:
	cmpl	28(%esp), %ebx
	jg	L20
	movl	_bsk(,%ebx,4), %edx
	leal	-1(%ebx), %eax
	movl	_bsk(,%eax,4), %eax
	addl	%edx, %eax
	movl	%eax, _bsk(,%ebx,4)
	addl	$1, %ebx
	jmp	L21
L20:
	movl	24(%esp), %ebx
L23:
	testl	%ebx, %ebx
	jle	L22
	movl	_sot(,%ebx,4), %edx
	movl	_bsk(,%edx,4), %eax
	leal	-1(%eax), %ecx
	movl	%ecx, _bsk(,%edx,4)
	movl	_tmp(,%ebx,4), %edx
	movl	%edx, _suf(,%eax,4)
	subl	$1, %ebx
	jmp	L23
L22:
	movl	24(%esp), %eax
	addl	$5, %eax
	sall	$2, %eax
	movl	%eax, 8(%esp)
	movl	$_rnk, 4(%esp)
	movl	$_old_rnk, (%esp)
	call	_memcpy
	movl	$0, %esi
	movl	$1, %ebx
L27:
	cmpl	24(%esp), %ebx
	jg	L24
	leal	-1(%ebx), %eax
	movl	_suf(,%eax,4), %edx
	movl	_suf(,%ebx,4), %eax
	movl	%edi, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z5checkiii
	testb	%al, %al
	je	L25
	movl	%esi, %edx
	jmp	L26
L25:
	addl	$1, %esi
	movl	%esi, %edx
L26:
	movl	_suf(,%ebx,4), %eax
	movl	%edx, _rnk(,%eax,4)
	addl	$1, %ebx
	jmp	L27
L24:
	addl	%edi, %edi
	movl	%esi, 28(%esp)
	jmp	L28
L12:
	movl	$1, %ebx
L32:
	cmpl	24(%esp), %ebx
	jg	L29
	cmpl	24(%esp), %ebx
	jne	L30
	movl	$10, %edx
	jmp	L31
L30:
	movl	$32, %edx
L31:
	movl	_suf(,%ebx,4), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$LC1, (%esp)
	call	_printf
	addl	$1, %ebx
	jmp	L32
L29:
	movl	$0, %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE24:
	.ident	"GCC: (MinGW.org GCC-8.2.0-5) 8.2.0"
	.def	_scanf;	.scl	2;	.type	32;	.endef
	.def	_strlen;	.scl	2;	.type	32;	.endef
	.def	_memset;	.scl	2;	.type	32;	.endef
	.def	_memcpy;	.scl	2;	.type	32;	.endef
	.def	_printf;	.scl	2;	.type	32;	.endef

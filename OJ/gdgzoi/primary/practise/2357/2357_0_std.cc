#include <iostream>
using namespace std;
#define M 1000
#define MAXN 310 // MAXN为最大有多少项相乘
int a[M], b[M]; // a[M]中存最终项系数;b[M]中存取中间变量;
int main()
{
    int m, n;
    int i, j, k;
    m = MAXN;
    while (scanf("%d", &n) != EOF)
    {
        if (n == 0)
            break;
        // 可以加一个跳出循环的条件
        // n为所求的指数的值: ";
        // 因为只求指数为n的系数的值:所以循环只到n就结束

        for (i = 0; i <= n; i++) // 初始化第一个式子:(1+X^2+X^3+...) 所以将其系数分别存到a[n]
        {
            a[i] = 1;
            b[i] = 0;
        }

        for (i = 2; i <= 17; i++) // 从第2项式子一直到第n项式子与原来累乘项的和继续相乘
        {
            for (j = 0; j <= n; j++)
                // 从所累乘得到的式子中指数为0遍历到指数为n 分别与第i个多项式的每一项相乘
                for (k = 0; k + j <= n; k += i * i)
                    // 第i个多项式的指数从0开始, 后面的每项指数依次比前面的多i, 比如当i=3时,
                    // 第3项的表达式为(1+x^3+x^6+x^9+……), 直到所得指数的值i+j>=n退出
                    b[j + k] += a[j];
            // 比如前面指数为1, 系数为3, 即a[1]=3的一项和下一个表达式的指数为k=3的相乘,
            // 则得到的式子的系数为, b[j+k]=b[4]+=a[1], 又a[1]=3, 所以指数为4的系数为b[4]=3;

            for (j = 0; j <= n; j++)
            // 然后将中间变量b数组中的值依次赋给数组a, 然后将数组b清零, 继续接收乘以下一个表达式所得的值
            {
                a[j] = b[j];
                b[j] = 0;
            }
        }

        printf("%d\n", a[n]); // 指数为n的项的系数为:
    }

    return 0;
}